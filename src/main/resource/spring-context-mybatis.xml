<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

       <!-- 引入配置文件 -->
       <bean id="propertyConfigurer"
             class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="location" value="classpath:application.properties" />
       </bean>

       <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
             destroy-method="close">
              <property name="driverClassName" value="${jdbc.driver}" />
              <property name="url" value="${jdbc.url}" />
              <property name="username" value="${jdbc.username}" />
              <property name="password" value="${jdbc.password}" />
              <!-- 初始化连接大小 -->
              <property name="initialSize" value="${initialSize}"></property>
              <!-- 连接池最大数量 -->
              <property name="maxActive" value="${maxActive}"></property>
              <!-- 连接池最大空闲 -->
              <property name="maxIdle" value="${maxIdle}"></property>
              <!-- 连接池最小空闲 -->
              <property name="minIdle" value="${minIdle}"></property>
              <!-- 获取连接最大等待时间 -->
              <property name="maxWait" value="${maxWait}"></property>
       </bean>

       <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="dataSource" ref="dataSource" />
              <!-- 自动扫描mapping.xml文件 -->
              <property name="mapperLocations" value="classpath:mappings/*.xml"></property>
       </bean>

       <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
              <property name="basePackage" value="com.spring.mvc.dao" />
              <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
       </bean>

       <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource" />
       </bean>


    <tx:annotation-driven transaction-manager="transactionManager" />
    <!-- MyBatis整合配置 end -->

       <!-- 定义ToRegistAction -->
       <bean id="toRegistAction"
             class="com.htgy.actions.ToRegistAction">
       </bean>
       <!-- 定义ToLoginAction -->
       <bean id="toLoginAction"
             class="actions.ToLoginAction">
       </bean>


       <bean id="loginAction"
             class="actions.LoginAction">
              <property name="commandClass">
                     <value>forms.LoginForm</value>
              </property>

              <property name="lFailView">
                     <value>pages.loginFail</value>
              </property>

              <property name="lSuccessView">
                     <value>loginSuccess</value>
              </property>
       </bean>

       <!-- 定义RegistAction -->
       <bean id="registAction"
             class="com.htgy.actions.RegistAction">
              <property name="commandClass">
                     <value>com.htgy.registform.RegistForm</value>
              </property>

              <property name="rSuccessView">
                     <value>registSuccess</value>
              </property>

              <property name="rFailView">
                     <value>registFail</value>
              </property>
       </bean>

</beans>